<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Documentation on Neva Programming Language</title>
    <link>https://nevalang.org/docs/</link>
    <description>Recent content in Documentation on Neva Programming Language</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://nevalang.org/docs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About The Language</title>
      <link>https://nevalang.org/docs/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://nevalang.org/docs/about/</guid>
      <description>What Is This? This is Neva or Nevalang (these two names are interchangeable) - an open-source flow-based general-purpose programming language with static typing and a focus on visual programming, which compiles into machine code and Go.&#xA;Why Yet Another Language? As clich√© and unbelievable as it sounds, Nevalang has no direct analogs. Its combination of characteristics makes it a unique language, well-suited for addressing two issues in programming where significant progress has not been felt for many years - visual programming and implicit parallelism.</description>
    </item>
    <item>
      <title>Quick Start</title>
      <link>https://nevalang.org/docs/quick-start/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://nevalang.org/docs/quick-start/</guid>
      <description>Install Nevalang and create your first project in one minute!&#xA;Installing Nevalang To begin, download the Nevalang installation script using the following command:&#xA;curl -sSL https://raw.githubusercontent.com/nevalang/neva/main/scripts/install.sh | bash Creating Your First Project Let&amp;rsquo;s create a new project named nevalang_test. This project will include a neva.yml manifest file and a main.neva source code file, which will contain a simple Nevalang program.&#xA;Execute the following commands to set up your project:&#xA;mkdir nevalang_test # create directory cd nevalang_test # go there touch neva.</description>
    </item>
    <item>
      <title>Style Guide</title>
      <link>https://nevalang.org/docs/style-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://nevalang.org/docs/style-guide/</guid>
      <description>The Nevalang style guide outlined in this document sets the standards for organizing and formatting code, designing components, and choosing appropriate names. It&amp;rsquo;s recommended that all programs follow this guide to ensure consistency across Nevalang code, making it easier to read and understand.&#xA;Code Organization Lines Count: Aim for files to be up to 300 lines. Files longer than 300 lines should be split, indicating a need for better organization. Formatting Tabs Over Spaces: Tabs are preferred for their flexibility in displaying indentation and for being more data-efficient.</description>
    </item>
    <item>
      <title>Compiler directives</title>
      <link>https://nevalang.org/docs/directives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://nevalang.org/docs/directives/</guid>
      <description>Compiler directives are special instructions for compiler.&#xA;They are not intended to be used on a daily basis by regular user but good nevalang programmer understands how they work because they are base for how many language features operate.&#xA;#extern Directive for component that tells the compiler that given component does not have implementation in source code and instead a runtime function call must be created.&#xA;#bind Directive for node that tells the compiler to insert given message to corresponding runtime function call.</description>
    </item>
    <item>
      <title>FAQ</title>
      <link>https://nevalang.org/docs/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://nevalang.org/docs/faq/</guid>
      <description>Welcome to the FAQ page! Here, we&amp;rsquo;ve compiled all the questions that you might not find answers to on other documentation pages. This section was primarily created as a reference for ourselves - when developing something as complex as a programming language, it&amp;rsquo;s easy to forget the reasons behind certain decisions. So, we thought, why not document at least those related to the language&amp;rsquo;s external aspects, right here on the website!</description>
    </item>
  </channel>
</rss>
